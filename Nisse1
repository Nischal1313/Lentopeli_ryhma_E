import mysql.connector
from geopy.distance import geodesic as GD

def youre_here(airport_name):
    sql2 = "SELECT latitude_deg, longitude_deg from airport"
    sql2 += f" Where name = '{airport_name}'"
    sijainti = suoritaHaku(sql2)
    return sijainti

def youre_going(germany):
    sql = "select longitude_deg, latitude_deg"
    sql += " from airport where airport.iso_country"
    sql += " = (select iso_country from country"
    sql += f" where country.name = '{germany}')"
    sijainti = suoritaHaku(sql)
    return sijainti



def get_first_tip(airport_name):
    sql = "Select tip_1 From airport "
    sql += f" where Name = '{airport_name}'"
    tulos = suoritaHaku(sql)
    print(tulos)
    return

yhteys = mysql.connector.connect(
    host="localhost",
    port=3306,
    database="karkuteilla_database",
    user="root",
    password="METROPOLIA13",
    autocommit=True,
)

def plane_art():
    return print(
        """
      ``+*:.
      =@@@@#.
       +@@@@@@..          .-:.
        :@@@@@@%:   .%@=..*@@@:.
         .*@@@@@@@:::#@@@**#@@@@@@@@@:.
           :@@@@@@@@@@@@@@@@@@@@@@@@#-.
            .-@@@@@@@@@@@@@@@@@=...
             .%@@@@@@@@@%#.
           :@@@@@@@@@@@@@:
           :%@@@@@@@@@@@@@#.
            .:@@@@@#.%@@@@@@+
          .@#.@@@@@:   #@@@@@@.
          :@@@@@@@+     .#@@@@@@@@@@@@*.
           .=@@@@@.       .+@@@@@@@#=..
             -@@@=         .@@@@@@.
             +@@#          .@@@--@@.
             #@@-          .@@+.
             .:+           .%@. """
    )


def suoritaHaku(sql):
    kursori = yhteys.cursor()
    kursori.execute(sql)
    tulos = kursori.fetchall()
    return tulos

pelaajan_kilometrit = 0
coins = 4
crimes_stopped = 0


def game(
    airport_name,
    correct_country_name,
    right_distance,
    coins,
    crimes_stopped,
    location_atm,
    pelaajan_kilometrit,
):

    get_first_tip(airport_name)

    print(f"Sinun stats KM: {pelaajan_kilometrit}, HETACOINS: {coins}, Rikokset pysäytetty {crimes_stopped}")
    print("")
    print(
        "Saamasi tiedon mukaan sinun pitäisi päättää mihin valtioon matkustat seuraavaksi."
    )
    print("")
    print(
        "Mikäli tietosi perusteella et pysty valitsemaan valtiota, voimme mahdollisuuksien mukaan hankkia sinulle lisää tietoa."
    )
    print("")
    player_choise = str(
        input(
            "Matkustan saamani tiedon perusteella (1), "
            "Yrittäkää kerätätä lisäätietoa rikollisen seuraavasta kohteesta.(2)"
        )
    )
    if player_choise == "1":
        next_country = input("Anna valtion nimi: ")
        if next_country == correct_country_name:
            coins += 2
            crimes_stopped += 1
        sijainti1 = youre_here(f"{airport_name}")
        sijainti2 = youre_going(f"{next_country}")

        distance = (
            GD(sijainti1, sijainti2).km
        )
        print(round(distance))
        # Onko tällä enään tarkoitusta vai ei, jos on eikö tää pitäs olla alhaalla, kun saadaan tieto
        # minne pelaaja haluaa matkustaa ).km

    if player_choise == "2":
        coins = coins - 1
        sql = "Select tip_2 From airport "
        sql += f" where name = '{airport_name}'"
        tulos = suoritaHaku(sql)
        print(tulos)
        next_country = input(
            f"Aika on lopussa, sinun on pakko valita seuraava kohde saamasi tietojen perusteella."
        )
        if next_country == correct_country_name:
            crimes_stopped += 1
            sijainti1 = youre_here(f"{airport_name}")
            sijainti2 = youre_going(f"{next_country}")
            
            distance = GD(sijainti1, sijainti2).km
            print(distance)
        else:
            coins -= 1

        #Funktion pitää palauttaa pelaajan_kilometrit, jonka voi ottaa samalla fuktion parametrilla, kun right_distance
        #jos pelaaja vastaa väärin sitten voi mennä laskemaan tuon fuktion, niin sitä voisi nyt laittaa tuohon
        #if lauseeseen, joka kattoo oliko pelaajan vastus oikea vai ei


        #Meidän olisi myös hyvä kattoo, että monesko kierro pelissä on meneillään. Jos kierroksia on jo mennyt 4 ja
        #pelaaja ei ole onnistunut pysättämään 3/4 rikosta niin se olisi automaattinen game over

        #Pitäisi myös katttoo if lausekkeella, että meneekö coins nollaan ja se viesti mistä oli puhetta, että
        #tulee pomolta viesti, että seuraava taso täytyy läpäistä ilman vinkkejä tai jtn sinne päin


        # kilometrifunktio rangaistus
        if right_distance > distance:
            rangaistus = (right_distance - distance) * 2
            pelaajan_kilometrit = rangaistus

        if distance > right_distance:
            rangaistus = (distance - right_distance) * 2
            pelaajan_kilometrit = rangaistus




    return coins, crimes_stopped, pelaajan_kilometrit, next_country

coin1, crime_stopped1, km, location_atm = game("Václav Havel Airport Prague", "germany", 256, 4, 0, "prague",0)

game("Berlin Brandenburg Airport","islanti", 256, coin1, crime_stopped1, location_atm, km)
